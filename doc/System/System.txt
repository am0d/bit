# System

## Description

`System` is the base "project" class in buildit. If you are implementing new language support then you should derive from `System`. Otherwise, it is best to implement a new `Compiler`, or to derive from another `System` such as `MSVC` or `Unix`. 

## Functions

#### add
parameters: `files`

description: Autoglobs directories, or adds a file to the compiler list. Only adds files with the compiler's `extensions` property. Uses var args.

#### remove
parameters: `files`

description: Works in the opposite way of `System.add`, by removing files from the compiler list.

#### require
parameters: `System`

description: Used to ensure a series of build are run in order. If the given `System` fails to complete properly, the `System` using require will not build.

#### append
parameters: `function`

description: Places the given `function` after the compiler's run step. Useful if a post build step is required.

#### prepend
parameters: `function`

description: Places the given `function` before the compiler's run step. Useful for creating prebuild steps.

#### pause
parameters: `None`

description: Is the same as using system('pause') on windows. It *is* cross platform, and is best used for scripts that are not run through a commandline, but rather run from a desktop interface.

#### add_path
parameters: `directories`

description: Temporarily adds any of the given directories to the system path. 

## Properties

#### static
type: `get`

description:

#### dynamic
type: `get`

description:

#### binary
type: `get`

description:

#### name
type: `get`

description:

#### compiler
type: `set`, `get`

description:

#### build_directory
type: `set`, `get`

description:

#### object_directory
type: `set`, `get`

description:
